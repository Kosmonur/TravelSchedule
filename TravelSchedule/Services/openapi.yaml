openapi: 3.0.3
info:
  title: API.Rasp.Yandex.Net
  description: API Яндекс.Расписаний
  version: 3.0.0
servers:
- url: https://api.rasp.yandex.net
externalDocs:
  description: "Документация по API"
  url: "https://yandex.ru/dev/rasp/doc/ru/"
paths:
  /v3.0/nearest_stations/:
    get:
      tags:
      - getNearestStations
      summary: Запрос позволяет получить список станций, находящихся в указанном радиусе от указанной точки. Максимальное количество возвращаемых станций — 50.
      operationId: getNearestStations
      parameters:
      - name: apikey
        in: query
        description: API key
        required: true
        schema:
          type: string
      - name: lat
        in: query
        description: Широта согласно WGS84.
        required: true
        schema:
          type: number
      - name: lng
        in: query
        description: Долгота согласно WGS84.
        required: true
        schema:
          type: number
      - name: distance
        in: query
        description: Радиус, в котором следует искать станции, в километрах.
        required: true
        schema:
          type: integer
      - name: format
        in: query
        description: json или xml
        required: false
        schema:
          type: string
          enum:
            - xml
            - json
          default: json
      - name: lang
        in: query
        description: Код языка и страны в ISO639 и ISO3166 (пример ru_RU)
        required: false
        schema:
          type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stations'
                
  /v3.0/nearest_settlement/:
    get:
      tags:
      - getNearestSettlement
      summary: Запрос позволяет получить информацию о ближайшем к указанной точке городе. Точка определяется географическими координатами (широтой и долготой) согласно WGS84. Поиск можно ограничить определенным радиусом (по умолчанию — 10 километров, но не больше 50).
      operationId: getNearestSettlement
      parameters:
      - name: apikey
        in: query
        description: API key
        required: true
        schema:
          type: string
      - name: lat
        in: query
        description: Широта согласно WGS84.
        required: true
        schema:
          type: number
      - name: lng
        in: query
        description: Долгота согласно WGS84.
        required: true
        schema:
          type: number
      - name: distance
        in: query
        description: Радиус, в котором следует искать ближайший город, в километрах.
        required: false
        schema:
          type: integer
      - name: lang
        in: query
        description: Код языка и страны в ISO639 и ISO3166 (пример ru_RU)
        required: false
        schema:
          type: string
      - name: format
        in: query
        description: json или xml
        required: false
        schema:
          type: string
          enum:
            - xml
            - json
          default: json
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settlement'
                
  /v3.0/search/:
    get:
      tags:
      - search
      summary: Запрос позволяет получить список рейсов, следующих от указанной станции отправления к указанной станции прибытия и информацию по каждому рейсу.
      operationId: search
      parameters:
      - name: apikey
        in: query
        description: API key
        required: true
        schema:
          type: string
      - name: from
        in: query
        description: Код станции отправления. Должен быть указан в системе кодирования.
        required: true
        schema:
          type: string
      - name: to
        in: query
        description: Код станции прибытия. Должен быть указан в системе кодирования.
        required: true
        schema:
          type: string
      - name: format
        in: query
        description: json или xml
        required: false
        schema:
          type: string
          enum:
            - xml
            - json
          default: json
      - name: lang
        in: query
        description: Код языка и страны в ISO639 и ISO3166 (пример ru_RU)
        required: false
        schema:
          type: string
      - name: date
        in: query
        description: Дата, на которую необходимо получить список рейсов. Должна быть указана в формате, соответствующем стандарту ISO 8601. Например, YYYY-MM-DD.
        required: false
        schema:
          type: string
      - name: transport_types
        in: query
        description: Тип транспортного средства.
        required: false
        schema:
          type: string
      - name: system
        in: query
        description: Система кодирования, в которой указывается код станции отправления и код станции прибытия (параметры from, to) в запросе.
        required: false
        schema:
          type: string
      - name: show_systems
        in: query
        description: Система кодирования, коды которой следует добавить к описанию станций в результатах поиска (элемент codes, вложенный в элементы from и to).
        required: false
        schema:
          type: string
      - name: offset
        in: query
        description: Смещение относительно первого результата поиска.
        required: false
        schema:
          type: number
      - name: limit
        in: query
        description: Максимальное количество результатов поиска в ответе.
        required: false
        schema:
          type: number
      - name: add_days_mask
        in: query
        description: Признак, который указывает, что для каждой нитки в ответе следует вернуть календарь хождения — элемент schedule, вложенный в элемент segments.
        required: false
        schema:
          type: boolean
      - name: result_timezone
        in: query
        description: Часовой пояс, для которого следует указывать даты и времена в ответе. Если параметр не передан, каждая дата и время в ответе будут указаны в часовом поясе соответствующей станции.
        required: false
        schema:
          type: string
      - name: transfers
        in: query
        description: Признак, разрешающий добавить к результатам поиска маршруты с пересадками.
        required: false
        schema:
          type: boolean
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Routes'
                
  /v3.0/carrier/:
    get:
      tags:
      - getCarrierInfo
      summary: Запрос позволяет получить информацию о перевозчике по указанному коду перевозчика.
      operationId: getCarrierInfo
      parameters:
      - name: apikey
        in: query
        description: API key
        required: true
        schema:
          type: string
      - name: code
        in: query
        description: Код перевозчика.
        required: true
        schema:
          type: string
      - name: system
        in: query
        description: Система кодирования, в которой указывается код перевозчика (параметр code) в запросе.
        required: false
        schema:
          type: string
      - name: lang
        in: query
        description: Код языка и страны в ISO639 и ISO3166 (пример ru_RU)
        required: false
        schema:
          type: string
      - name: format
        in: query
        description: json или xml
        required: false
        schema:
          type: string
          enum:
            - xml
            - json
          default: json
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carriers'
                
  /v3.0/schedule/:
    get:
      tags:
      - getSchedule
      summary: Запрос позволяет получить список рейсов, отправляющихся от указанной станции и информацию по каждому рейсу.
      operationId: getSchedule
      parameters:
      - name: apikey
        in: query
        description: API key
        required: true
        schema:
          type: string
      - name: station
        in: query
        description: Код станции. Должен быть указан в системе кодирования.
        required: true
        schema:
          type: string
      - name: lang
        in: query
        description: Код языка и страны в ISO639 и ISO3166 (пример ru_RU)
        required: false
        schema:
          type: string
      - name: format
        in: query
        description: json или xml
        required: false
        schema:
          type: string
          enum:
            - xml
            - json
          default: json
      - name: date
        in: query
        description: Дата, на которую необходимо получить список рейсов. Должна быть указана в формате, соответствующем стандарту ISO 8601. Например, YYYY-MM-DD.
        required: false
        schema:
          type: string
      - name: transport_types
        in: query
        description: Тип транспортного средства.
        required: false
        schema:
          type: string
      - name: direction
        in: query
        description: Код направления, по которому необходимо получить список рейсов электричек по станции (например, «arrival», «all» или «на Москву»).
        required: false
        schema:
          type: string
      - name: event
        in: query
        description: Событие, для которого нужно отфильтровать нитки в расписании.
        required: false
        schema:
          type: string
          enum:
            - departure
            - arrival
          default: departure
      - name: system
        in: query
        description: Система кодирования, в которой указывается код станции (параметр station) в запросе.
        required: false
        schema:
          type: string
      - name: show_systems
        in: query
        description: Система кодирования, в которой необходимо получить коды станций (в элементе ответа codes, вложенном в элемент station).
        required: false
        schema:
          type: string
      - name: result_timezone
        in: query
        description: Часовой пояс, для которого следует указывать даты и времена в ответе.
        required: false
        schema:
          type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleRoutes'
                
  /v3.0/thread/:
    get:
      tags:
      - getThreadStations
      summary: Запрос позволяет получить список станций следования нитки по указанному идентификатору нитки, информацию о каждой нитке и о промежуточных станциях нитки.
      operationId: getThreadStations
      parameters:
      - name: apikey
        in: query
        description: API key
        required: true
        schema:
          type: string
      - name: uid
        in: query
        description: Идентификатор нитки. Перед каждым запросом станций нитки необходимо получать актуальный идентификатор запросом расписания рейсов между станциями или расписания рейсов по станции.
        required: true
        schema:
          type: string
      - name: from
        in: query
        description: Код станции отправления.
        required: false
        schema:
          type: string
      - name: to
        in: query
        description: Код станции прибытия.
        required: false
        schema:
          type: string
      - name: format
        in: query
        description: json или xml
        required: false
        schema:
          type: string
          enum:
            - xml
            - json
          default: json
      - name: lang
        in: query
        description: Код языка и страны в ISO639 и ISO3166 (пример ru_RU)
        required: false
        schema:
          type: string
      - name: date
        in: query
        description: Дата, на которую необходимо получить список рейсов. Должна быть указана в формате, соответствующем стандарту ISO 8601. Например, YYYY-MM-DD.
        required: false
        schema:
          type: string
      - name: show_systems
        in: query
        description: Cистеме кодирования, в которой необходимо получить коды станций.
        required: false
        schema:
          type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadStations'
                
  /v3.0/copyright/:
    get:
      tags:
      - getCopyright
      summary: Запрос позволяет получить данные о Яндекс Расписаниях - URL сервиса, баннер в различных цветовых представлениях и уведомительный текст.
      operationId: getCopyright
      parameters:
      - name: apikey
        in: query
        description: API key
        required: true
        schema:
          type: string
      - name: format
        in: query
        description: json или xml
        required: false
        schema:
          type: string
          enum:
            - xml
            - json
          default: json
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Copyright'
                
  /v3.0/stations_list/:
    get:
      tags:
      - getStationsList
      summary: Ресурс содержит полный список станций, информацию о которых предоставляют Яндекс Расписания.
      operationId: getStationsList
      parameters:
      - name: apikey
        in: query
        description: API key
        required: true
        schema:
          type: string
      - name: format
        in: query
        description: json или xml
        required: false
        schema:
          type: string
          enum:
            - xml
            - json
          default: json
      - name: lang
        in: query
        description: Код языка и страны в ISO639 и ISO3166 (пример ru_RU)
        required: false
        schema:
          type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationsList'
            text/html:
              schema: {}
                
components:
  schemas:
    Stations:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        stations:
          type: array
          items:
            $ref: '#/components/schemas/Station'
    Pagination:
      type: object
      properties:
        total:
          type: integer
        limit:
          type: integer
        offset:
          type: integer
    Station:
      allOf:
        - $ref: '#/components/schemas/StationType'
        - type: object
          properties:
            lat:
              type: number
            lng:
              type: number
            station_type:
              type: string
            station_type_name:
              type: string
            transport_type:
              type: string
            distance:
              type: number
            majority:
              type: integer
            type_choices:
              $ref: '#/components/schemas/Schedule'
    Schedule:
      type: object
      properties:
        desktop_url:
          type: string
        touch_url:
          type: string
    Settlement:
      allOf:
        - $ref: '#/components/schemas/StationType'
        - type: object
          properties:
            lat:
              type: number
            lng:
              type: number
            distance:
              type: number
    Routes:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        interval_segments:
          type: array
          items:
            $ref: '#/components/schemas/IntervalSegment'
        segments:
          type: array
          items:
            $ref: '#/components/schemas/Segment'
        search:
          $ref: '#/components/schemas/Search'
    ScheduleRoutes:
      type: object
      properties:
        date:
          type: string
        pagination:
          $ref: '#/components/schemas/Pagination'
        station:
          $ref: '#/components/schemas/SingleStation'
        schedule:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleData'
        interval_schedule:
          type: array
          items:
            $ref: '#/components/schemas/IntervalSchedule'
        schedule_direction:
            $ref: '#/components/schemas/Direction'
        directions:
          type: array
          items:
            $ref: '#/components/schemas/Direction'
    IntervalSegment:
      type: object
      properties:
        from:
          $ref: '#/components/schemas/Station'
        thread:
          $ref: '#/components/schemas/Thread'
        departure_platform:
          type: string
        stops:
          type: string
        departure_terminal:
          type: string
        to:
          $ref: '#/components/schemas/Station'
        has_transfers:
          type: boolean
        tickets_info:
          $ref: '#/components/schemas/TicketsInfo'
        duration:
          type: integer
        arrival_terminal:
          type: string
        start_date:
          type: string
        arrival_platform:
          type: string
    Segment:
      allOf:
        - $ref: '#/components/schemas/IntervalSegment'
        - type: object
          properties:
            arrival:
              type: string
            departure:
              type: string
    Thread:
      type: object
      properties:
        uid:
          type: string
        title:
          type: string
        interval:
          $ref: '#/components/schemas/Interval'
        number:
          type: string
        short_title:
          type: string
        thread_method_link:
          type: string
        carrier:
          $ref: '#/components/schemas/Carrier'
        transport_type:
          type: string
        vehicle:
          type: string
        transport_subtype:
          $ref: '#/components/schemas/TransportSubtype'
        express_type:
          type: string
    Interval:
      type: object
      properties:
        density:
          type: string
        end_time:
          type: string
        begin_time:
          type: string
    TicketsInfo:
      type: object
      properties:
        et_marker:
          type: boolean
        places:
          type: array
          items:
            $ref: '#/components/schemas/Places'
    Places:
      type: object
      properties:
        currency:
          type: string
        price:
          $ref: '#/components/schemas/Price'
        name:
          type: string
    Price:
      type: object
      properties:
        cents:
          type: integer
        whole:
          type: integer
    Carriers:
        type: object
        properties:
          carriers:
            type: array
            items:
              $ref: '#/components/schemas/Carrier'
          carrier:
              $ref: '#/components/schemas/Carrier'
    Carrier:
      type: object
      properties:
        code:
          type: integer
        contacts:
          type: string
        url:
          type: string
        logo_svg:
          type: string
        title:
          type: string
        phone:
          type: string
        codes:
          $ref: '#/components/schemas/Codes'
        address:
          type: string
        logo:
          type: string
        email:
          type: string
    TransportSubtype:
      type: object
      properties:
        color:
          type: string
        code:
          type: string
        title:
          type: string
    Codes:
      type: object
      properties:
        icao:
          type: string
        sirena:
          type: string
        iata:
          type: string
    Search:
      type: object
      properties:
        date:
          type: string
        to:
          $ref: '#/components/schemas/StationType'
        from:
          $ref: '#/components/schemas/StationType'
    StationType:
      type: object
      properties:
        code:
          type: string
        type:
          type: string
        popular_title:
          type: string
        short_title:
          type: string
        title:
          type: string
    SingleStation:
      allOf:
        - $ref: '#/components/schemas/StationType'
        - type: object
          properties:
            station_type:
              type: string
            transport_type:
              type: string
    Direction:
      type: object
      properties:
        code:
          type: string
        title:
          type: string
    ScheduleData:
      type: object
      properties:
        except_days:
          type: string
        arrival:
          type: string
        thread:
          $ref: '#/components/schemas/BaseThread'
        transport_type:
          type: string
        vehicle:
          type: string
        transport_subtype:
          $ref: '#/components/schemas/TransportSubtype'
        express_type:
          type: string
        is_fuzzy:
          type: boolean
        days:
          type: string
        stops:
          type: string
        departure:
          type: string
        terminal:
          type: string
        platform:
          type: string
    BaseThread:
      type: object
      properties:
        uid:
          type: string
        title:
          type: string
        number:
          type: string
        short_title:
          type: string
        transport_type:
          type: string
        vehicle:
          type: string
        transport_subtype:
          $ref: '#/components/schemas/TransportSubtype'
        express_type:
          type: string
        carrier:
          $ref: '#/components/schemas/ThreadCarrier'
    ThreadCarrier:
      type: object
      properties:
        code:
          type: integer
        codes:
          $ref: '#/components/schemas/Codes'
        title:
          type: string
    IntervalSchedule:
      type: object
      properties:
        except_days:
          type: string
        thread:
          allOf:
          - $ref: '#/components/schemas/BaseThread'
          - $ref: '#/components/schemas/Interval'
        is_fuzzy:
          type: boolean
        days:
          type: string
        stops:
          type: string
        terminal:
          type: string
        platform:
          type: string
    ThreadStations:
      type: object
      properties:
        except_days:
          type: string
        arrival_date:
          type: string
        from:
          type: string
        uid:
          type: string
        title:
          type: string
        departure_date:
          type: string
        start_time:
          type: string
        number:
          type: string
        short_title:
          type: string
        days:
          type: string
        to:
          type: string
        carrier:
          $ref: '#/components/schemas/ThreadCarrier'
        transport_type:
          type: string
        stops:
          type: array
          items:
              $ref: '#/components/schemas/Stop'
        vehicle:
          type: string
        start_date:
          type: string
        transport_subtype:
          $ref: '#/components/schemas/TransportSubtype'
        express_type:
          type: string
    Stop:
      type: object
      properties:
        station:
          allOf:
          - $ref: '#/components/schemas/StationType'
          - type: object
            properties:
              station_type:
                type: string
              station_type_name:
                type: string
              transport_type:
                type: string
        platform:
          type: string
        departure:
          type: string
        arrival:
          type: string
        stop_time:
          type: string
        duration:
          type: integer
        terminal:
          type: string
    Copyright:
      type: object
      properties:
        copyright:
          type: object
          properties:
            logo_vm:
              type: string
            url:
              type: string
            logo_vd:
              type: string
            logo_hy:
              type: string
            logo_hd:
              type: string
            logo_vy:
              type: string
            logo_hm:
              type: string
            text:
              type: string
    StationsList:
      type: object
      properties:
        countries:
          type: array
          items:
            $ref: '#/components/schemas/Country'
    Country:
      type: object
      properties:
          regions:
            type: array
            items:
                $ref: '#/components/schemas/Region'
          codes:
            $ref: '#/components/schemas/StationCode'
          title:
            type: string
    StationCode:
      type: object
      properties:
        esr_code:
          type: string
          nullable: true
        yandex_code:
          type: string
          nullable: true
          
    Region:
        type: object
        properties:
          setlements:
            type: array
            items:
                $ref: '#/components/schemas/SingleSettlement'
          codes:
            $ref: '#/components/schemas/StationCode'
          title:
            type: string
    SingleSettlement:
        type: object
        properties:
          title:
            type: string
          codes:
            $ref: '#/components/schemas/StationCode'
          stations:
            type: array
            items:
                $ref: '#/components/schemas/DetailedStation'
    DetailedStation:
        type: object
        properties:
          direction:
            type: string
          codes:
            $ref: '#/components/schemas/StationCode'
          station_type:
            type: string
          title:
            type: string
          longitude:
            type: number
          latitude:
            type: number
          transport_type:
            type: string

